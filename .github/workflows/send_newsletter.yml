name: Send Newsletter

on:
  schedule:
    - cron: '49 8 * * 6'
  workflow_dispatch:

env:
  WORKING_DIR: course-browser
  PYTHON_VERSION: '3.12'
  RECIPIENTS_REPO: kctong529/sisukas-newsletter-recipients

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Set up SSH for recipients repo
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.RECIPIENTS_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone private recipients repo
        run: |
          git clone git@github.com:${{ env.RECIPIENTS_REPO }}.git

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Generate newsletter content
        run: |
          python scripts/generate_newsletter.py

      - name: Move email list into expected location
        run: |
          cp sisukas-newsletter-recipients/email_list.txt email_list.txt

      - name: Send newsletter
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        run: |
          chmod +x scripts/send_newsletter.sh
          ./scripts/send_newsletter.sh

      - name: Generate newsletter for public view
        run: |
          pip install beautifulsoup4
          python scripts/wrap_newsletter.py

      - name: Get ISO week number
        id: issue
        run: echo "number=$(date +%V)" >> $GITHUB_OUTPUT

      - name: Check for changes and commit if needed
        id: check-commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.WORKING_DIR }}/public/newsletter.html
          if git diff --cached --quiet; then
            echo "No changes to commit."
            echo "commit-made=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Update Week ${{ steps.issue.outputs.number }} newsletter"
            git push origin main
            echo "commit-made=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Log if deploy triggered by newsletter commit
        if: steps.check-commit.outputs.commit-made == 'true'
        run: echo "Deploying since a newsletter commit was made"
