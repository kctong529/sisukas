name: CD Pipeline

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: 
      - "Send Newsletter"
      - "Check Course Updates"
    types:
      - completed

jobs:
  determine-deployment:
    name: Deployment needed
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.direct_push.conclusion == 'success' || steps.newsletter_check.conclusion == 'success' || steps.course_check.conclusion == 'success' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check direct push
        id: direct_push
        if: github.event_name == 'push'
        run: |
          echo "Direct push to main - deploying"
          exit 0

      - name: Check newsletter update
        id: newsletter_check
        if: github.event_name == 'workflow_run' && contains(github.event.workflow_run.head_commit.message, 'Update Week') && contains(github.event.workflow_run.head_commit.message, 'newsletter')
        run: |
          echo "Newsletter update detected - deploying"
          exit 0

      - name: Check course database update
        id: course_check
        if: github.event_name == 'workflow_run' && startsWith(github.event.workflow_run.head_commit.message, 'Update course database:')
        run: |
          echo "Course database update detected - deploying"
          exit 0
          
  build:
    name: Build Application
    needs: determine-deployment
    if: needs.determine-deployment.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    outputs:
      build-complete: ${{ steps.build.outputs.result }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm ci

      - name: Build with Vite
        id: build
        run: |
          npm run build
          echo "result=success" >> $GITHUB_OUTPUT

      - name: List Files
        run: ls -la

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment: 
      name: production
      url: https://sisukas.fly.dev/
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: List Files
        run: ls -la

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: https://sisukas.fly.dev/
          environment: production

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy on Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: https://sisukas.fly.dev/
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: https://sisukas.fly.dev/
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
